


ROUTED(8)	    UNIX Programmer's Manual		ROUTED(8)



NAME
     routed - network routing daemon

SYNOPSIS
     routed [ -d ] [ -g ] [ -s ] [ -q ] [ -t ] [ _l_o_g_f_i_l_e ]

DESCRIPTION
     _R_o_u_t_e_d is invoked at boot time to manage the network routing
     tables.  The routing daemon uses a variant of the Xerox NS
     Routing Information Protocol in maintaining up to date ker-
     nel routing table entries.  It used a generalized protocol
     capable of use with multiple address types, but is currently
     used only for Internet routing within a cluster of networks.

     In normal operation _r_o_u_t_e_d listens on the _u_d_p(4) socket for
     the _r_o_u_t_e service (see _s_e_r_v_i_c_e_s(5)) for routing information
     packets.  If the host is an internetwork router, it periodi-
     cally supplies copies of its routing tables to any directly
     connected hosts and networks.

     When _r_o_u_t_e_d is started, it uses the SIOCGIFCONF _i_o_c_t_l to
     find those directly connected interfaces configured into the
     system and marked ``up'' (the software loopback interface is
     ignored).	If multiple interfaces are present, it is assumed
     that the host will forward packets between networks.  _R_o_u_t_e_d
     then transmits a _r_e_q_u_e_s_t packet on each interface (using a
     broadcast packet if the interface supports it) and enters a
     loop, listening for _r_e_q_u_e_s_t and _r_e_s_p_o_n_s_e packets from other
     hosts.

     When a _r_e_q_u_e_s_t packet is received, _r_o_u_t_e_d formulates a reply
     based on the information maintained in its internal tables.
     The _r_e_s_p_o_n_s_e packet generated contains a list of known
     routes, each marked with a ``hop count'' metric (a count of
     16, or greater, is considered ``infinite'').  The metric
     associated with each route returned provides a metric _r_e_l_a_-
     _t_i_v_e _t_o _t_h_e _s_e_n_d_e_r.

     _R_e_s_p_o_n_s_e packets received by _r_o_u_t_e_d are used to update the
     routing tables if one of the following conditions is satis-
     fied:

     (1)  No routing table entry exists for the destination net-
	  work or host, and the metric indicates the destination
	  is ``reachable'' (i.e. the hop count is not infinite).

     (2)  The source host of the packet is the same as the router
	  in the existing routing table entry.	That is, updated
	  information is being received from the very internet-
	  work router through which packets for the destination
	  are being routed.




Printed 11/26/99	November 17, 1996			1






ROUTED(8)	    UNIX Programmer's Manual		ROUTED(8)



     (3)  The existing entry in the routing table has not been
	  updated for some time (defined to be 90 seconds) and
	  the route is at least as cost effective as the current
	  route.

     (4)  The new route describes a shorter route to the destina-
	  tion than the one currently stored in the routing
	  tables; the metric of the new route is compared against
	  the one stored in the table to decide this.

     When an update is applied, _r_o_u_t_e_d records the change in its
     internal tables and updates the kernel routing table.  The
     change is reflected in the next _r_e_s_p_o_n_s_e packet sent.

     In addition to processing incoming packets, _r_o_u_t_e_d also
     periodically checks the routing table entries.  If an entry
     has not been updated for 3 minutes, the entry's metric is
     set to infinity and marked for deletion.  Deletions are
     delayed an additional 60 seconds to insure the invalidation
     is propagated throughout the local internet.

     Hosts acting as internetwork routers gratuitously supply
     their routing tables every 30 seconds to all directly con-
     nected hosts and networks.  The response is sent to the
     broadcast address on nets capable of that function, to the
     destination address on point-to-point links, and to the
     router's own address on other networks.  The normal routing
     tables are bypassed when sending gratuitous responses.  The
     reception of responses on each network is used to determine
     that the network and interface are functioning correctly.
     If no response is received on an interface, another route
     may be chosen to route around the interface, or the route
     may be dropped if no alternative is available.

     _R_o_u_t_e_d _s_u_p_p_o_r_t_s _s_e_v_e_r_a_l _o_p_t_i_o_n_s:

     -d   Enable additional debugging information to be logged,
	  such as bad packets received.

     -g   This flag is used on internetwork routers to offer a
	  route to the ``default'' destination.  This is typi-
	  cally used on a gateway to the Internet, or on a gate-
	  way that uses another routing protocol whose routes are
	  not reported to other local routers.

     -s   Supplying this option forces _r_o_u_t_e_d to supply routing
	  information whether it is acting as an internetwork
	  router or not.  This is the default if multiple network
	  interfaces are present, or if a point-to-point link is
	  in use.

     -q   This is the opposite of the -s option.



Printed 11/26/99	November 17, 1996			2






ROUTED(8)	    UNIX Programmer's Manual		ROUTED(8)



     -t   If the -t option is specified, all packets sent or
	  received are printed on the standard output.	In addi-
	  tion, _r_o_u_t_e_d will not divorce itself from the control-
	  ling terminal so that interrupts from the keyboard will
	  kill the process.

     Any other argument supplied is interpreted as the name of
     file in which _r_o_u_t_e_d's actions should be logged.  This log
     contains information about any changes to the routing tables
     and, if not tracing all packets, a history of recent mes-
     sages sent and received which are related to the changed
     route.

     In addition to the facilities described above, _r_o_u_t_e_d sup-
     ports the notion of ``distant'' _p_a_s_s_i_v_e and _a_c_t_i_v_e gateways.
     When _r_o_u_t_e_d is started up, it reads the file /_e_t_c/_g_a_t_e_w_a_y_s
     to find gateways which may not be located using only infor-
     mation from the SIOGIFCONF _i_o_c_t_l.	Gateways specified in
     this manner should be marked passive if they are not
     expected to exchange routing information, while gateways
     marked active should be willing to exchange routing informa-
     tion (i.e.  they should have a _r_o_u_t_e_d process running on the
     machine).	Passive gateways are maintained in the routing
     tables forever and information regarding their existence is
     included in any routing information transmitted.  Active
     gateways are treated equally to network interfaces.  Routing
     information is distributed to the gateway and if no routing
     information is received for a period of the time, the asso-
     ciated route is deleted.  External gateways are also pas-
     sive, but are not placed in the kernel routing table nor are
     they included in routing updates.	The function of external
     entries is to inform _r_o_u_t_e_d that another routing process
     will install such a route, and that alternate routes to that
     destination should not be installed.  Such entries are only
     required when both routers may learn of routes to the same
     destination.

     The /_e_t_c/_g_a_t_e_w_a_y_s is comprised of a series of lines, each in
     the following format:

     < net | host > _n_a_m_e_1 gateway _n_a_m_e_2 metric _v_a_l_u_e < passive | active | external >

     The net or host keyword indicates if the route is to a net-
     work or specific host.

     _N_a_m_e_1 is the name of the destination network or host.  This
     may be a symbolic name located in /_e_t_c/_n_e_t_w_o_r_k_s or
     /_e_t_c/_h_o_s_t_s (or, if started after _n_a_m_e_d(8), known to the name
     server), or an Internet address specified in ``dot'' nota-
     tion; see _i_n_e_t(3).





Printed 11/26/99	November 17, 1996			3






ROUTED(8)	    UNIX Programmer's Manual		ROUTED(8)



     _N_a_m_e_2 is the name or address of the gateway to which mes-
     sages should be forwarded.

     _V_a_l_u_e is a metric indicating the hop count to the destina-
     tion host or network.

     One of the keywords passive, active or external indicates if
     the gateway should be treated as _p_a_s_s_i_v_e or _a_c_t_i_v_e (as
     described above), or whether the gateway is external to the
     scope of the _r_o_u_t_e_d protocol.

     Internetwork routers that are directly attached to the
     Arpanet or Milnet should use the Exterior Gateway Protocol
     (EGP) to gather routing information rather then using a
     static routing table of passive gateways.	EGP is required
     in order to provide routes for local networks to the rest of
     the Internet system.  Sites needing assistance with such
     configurations should contact the Computer Systems Research
     Group at Berkeley.

FILES
     /etc/gateways  for distant gateways

SEE ALSO
     ``Internet Transport Protocols'', XSIS 028112, Xerox System
     Integration Standard.
     udp(4), XNSrouted(8), htable(8)

BUGS
     The kernel's routing tables may not correspond to those of
     _r_o_u_t_e_d when redirects change or add routes.  The only remedy
     for this is to place the routing process in the kernel.

     _R_o_u_t_e_d should incorporate other routing protocols, such as
     Xerox NS (_X_N_S_r_o_u_t_e_d(8)) and EGP.  Using separate processes
     for each requires configuration options to avoid redundant
     or competing routes.

     _R_o_u_t_e_d should listen to intelligent interfaces, such as an
     IMP, and to error protocols, such as ICMP, to gather more
     information.  It does not always detect unidirectional
     failures in network interfaces (e.g., when the output side
     fails).












Printed 11/26/99	November 17, 1996			4



