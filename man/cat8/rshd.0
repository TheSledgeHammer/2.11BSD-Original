


RSHD(8)             UNIX Programmer's Manual		  RSHD(8)



NAME
     rshd - remote shell server

SYNOPSIS
     rshd [-aln]

DESCRIPTION
     _R_s_h_d is the server for the _r_c_m_d(3) routine and, conse-
     quently, for the _r_s_h(1) program.  The server provides remote
     execution facilities with authentication based on privileged
     port numbers from trusted hosts.

     _R_s_h_d listens for service requests at the port indicated in
     the ``cmd'' service specification; see _s_e_r_v_i_c_e_s(5).  When a
     service request is received the following protocol is ini-
     tiated:

     1)   The server checks the client's source port.  If the
	  port is not in the range 512-1023, the server aborts
	  the connection.

     2)   The server reads characters from the socket up to a
	  null (`\0') byte.  The resultant string is interpreted
	  as an ASCII number, base 10.

     3)   If the number received in step 2 is non-zero, it is
	  interpreted as the port number of a secondary stream to
	  be used for the stderr.  A second connection is then
	  created to the specified port on the client's machine.
	  The source port of this second connection is also in
	  the range 512-1023.

     4)   The server checks the client's source address and
	  requests the corresponding host name (see _g_e_t_h_o_s_t_-
	  _b_y_a_d_d_r(3), _h_o_s_t_s(5) and _n_a_m_e_d(8)).  If the hostname
	  cannot be determined, the dot-notation representation
	  of the host address is used.	If the hostname is in the
	  same domain as the server (according to the last two
	  components of the domain name), or if the -a option is
	  given, the addresses for the hostname are requested,
	  verifying that the name and address correspond.  If
	  address verification fails, the connection is aborted
	  with the message, ``Host address mismatch.''

     5)   A null terminated user name of at most 16 characters is
	  retrieved on the initial socket.  This user name is
	  interpreted as the user identity on the client's
	  machine.

     6)   A null terminated user name of at most 16 characters is
	  retrieved on the initial socket.  This user name is
	  interpreted as a user identity to use on the server's



Printed 11/24/99       September 11, 1989			1






RSHD(8)             UNIX Programmer's Manual		  RSHD(8)



	  machine.

     7)   A null terminated command to be passed to a shell is
	  retrieved on the initial socket.  The length of the
	  command is limited by the upper bound on the size of
	  the system's argument list.

     8)   _R_s_h_d then validates the user using _r_u_s_e_r_o_k(3), which
	  uses the file ``/etc/hosts.equiv'' and the ``.rhosts''
	  file found in the user's home directory.  The -l option
	  prevents _r_u_s_e_r_o_k(3) from doing any validation based on
	  the user's ``.rhosts'' file, unless the user is the
	  superuser.

     9)   A null byte is returned on the initial socket and the
	  command line is passed to the normal login shell of the
	  user.  The shell inherits the network connections esta-
	  blished by _r_s_h_d.

     Transport-level keepalive messages are enabled unless the -n
     option is present.  The use of keepalive messages allows
     sessions to be timed out if the client crashes or becomes
     unreachable.

DIAGNOSTICS
     Except for the last one listed below, all diagnostic mes-
     sages are returned on the initial socket, after which any
     network connections are closed.  An error is indicated by a
     leading byte with a value of 1 (0 is returned in step 9
     above upon successful completion of all the steps prior to
     the execution of the login shell).

     ``locuser too long''
     The name of the user on the client's machine is longer than
     16 characters.

     ``remuser too long''
     The name of the user on the remote machine is longer than 16
     characters.

     ``command too long ''
     The command line passed exceeds the size of the argument
     list (as configured into the system).

     ``Login incorrect.''
     No password file entry for the user name existed.

     ``No remote directory.''
     The _c_h_d_i_r command to the home directory failed.

     ``Permission denied.''
     The authentication procedure described above failed.



Printed 11/24/99       September 11, 1989			2






RSHD(8)             UNIX Programmer's Manual		  RSHD(8)



     ``Can't make pipe.''
     The pipe needed for the stderr, wasn't created.

     ``Can't fork; try again.''
     A _f_o_r_k by the server failed.

     ``<shellname>: ...''
     The user's login shell could not be started.  This message
     is returned on the connection associated with the stderr,
     and is not preceded by a flag byte.

SEE ALSO
     rsh(1), rcmd(3), ruserok(3)

BUGS
     The authentication procedure used here assumes the integrity
     of each client machine and the connecting medium.	This is
     insecure, but is useful in an ``open'' environment.

     A facility to allow all data exchanges to be encrypted
     should be present.

     A more extensible protocol (such as Telnet) should be used.
































Printed 11/24/99       September 11, 1989			3



