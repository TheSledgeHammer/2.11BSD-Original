


STRING(3)	    UNIX Programmer's Manual		STRING(3)



NAME
     strcat, strncat, strcmp, strncmp, strcasecmp, strncasecmp,
     strcpy, strncpy, strlen, index, rindex - string operations

SYNOPSIS
     #include <strings.h>

     char *strcat(s, append)
     char *s, *append;

     char *strncat(s, append, count)
     char *s, *append;
     int count;

     strcmp(s1, s2)
     char *s1, *s2;

     strncmp(s1, s2, count)
     char *s1, *s2;
     int count;

     strcasecmp(s1, s2)
     char *s1, *s2;

     strncasecmp(s1, s2, count)
     char *s1, *s2;
     int count;

     char *strcpy(to, from)
     char *to, *from;

     char *strncpy(to, from, count)
     char *to, *from;
     int count;

     strlen(s)
     char *s;

     char *index(s, c)
     char *s, c;

     char *rindex(s, c)
     char *s, c;

DESCRIPTION
     These functions operate on null-terminated strings.  They do
     not check for overflow of any receiving string.

     _S_t_r_c_a_t appends a copy of string _a_p_p_e_n_d to the end of string
     _s. _S_t_r_n_c_a_t copies at most _c_o_u_n_t characters.  Both return a
     pointer to the null-terminated result.




Printed 11/26/99	October 22, 1987			1






STRING(3)	    UNIX Programmer's Manual		STRING(3)



     _S_t_r_c_m_p compares its arguments and returns an integer greater
     than, equal to, or less than 0, according as _s_1 is lexico-
     graphically greater than, equal to, or less than _s_2.
     _S_t_r_n_c_m_p makes the same comparison but looks at at most _c_o_u_n_t
     characters.  _S_t_r_c_a_s_e_c_m_p and _s_t_r_n_c_a_s_e_c_m_p are identical in
     function, but are case insensitive.  The returned lexico-
     graphic difference reflects a conversion to lower-case.

     _S_t_r_c_p_y copies string _f_r_o_m to _t_o, stopping after the null
     character has been moved.	_S_t_r_n_c_p_y copies exactly _c_o_u_n_t
     characters, appending nulls if _f_r_o_m is less than _c_o_u_n_t char-
     acters in length; the target may not be null-terminated if
     the length of _f_r_o_m is _c_o_u_n_t or more.  Both return _t_o.

     _S_t_r_l_e_n returns the number of non-null characters in _s.

     _I_n_d_e_x (_r_i_n_d_e_x) returns a pointer to the first (last)
     occurrence of character _c in string _s or zero if _c does not
     occur in the string.  Setting _c to NULL works.




































Printed 11/26/99	October 22, 1987			2



