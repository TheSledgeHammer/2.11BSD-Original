


POPEN(3)	    UNIX Programmer's Manual		 POPEN(3)



NAME
     popen, pclose - initiate I/O to/from a process

SYNOPSIS
     #include <stdio.h>

     FILE *popen(command, type)
     char *command, *type;

     pclose(stream)
     FILE *stream;

DESCRIPTION
     The arguments to _p_o_p_e_n are pointers to null-terminated
     strings containing respectively a shell command line and an
     I/O mode, either "r" for reading or "w" for writing.  It
     creates a pipe between the calling process and the command
     to be executed.  The value returned is a stream pointer that
     can be used (as appropriate) to write to the standard input
     of the command or read from its standard output.

     A stream opened by _p_o_p_e_n should be closed by _p_c_l_o_s_e, which
     waits for the associated process to terminate and returns
     the exit status of the command.

     Because open files are shared, a type "r" command may be
     used as an input filter, and a type "w" as an output filter.

SEE ALSO
     pipe(2), fopen(3S), fclose(3S), system(3), wait(2), sh(1)

DIAGNOSTICS
     _P_o_p_e_n returns a null pointer if files or processes cannot be
     created, or the shell cannot be accessed.

     _P_c_l_o_s_e returns -1 if _s_t_r_e_a_m is not associated with a
     `popened' command.

BUGS
     Buffered reading before opening an input filter may leave
     the standard input of that filter mispositioned.  Similar
     problems with an output filter may be forestalled by careful
     buffer flushing, for instance, with _f_f_l_u_s_h, see _f_c_l_o_s_e(3S).

     _P_o_p_e_n always calls _s_h, never calls _c_s_h.










Printed 11/26/99	  May 15, 1985				1



