


RESOLVER(3)	    UNIX Programmer's Manual	      RESOLVER(3)



NAME
     res_mkquery, res_send, res_init, dn_comp, dn_expand -
     resolver routines

SYNOPSIS
     #include <sys/types.h>
     #include <netinet/in.h>
     #include <arpa/nameser.h>
     #include <resolv.h>

     res_mkquery(op, dname, class, type, data, datalen, newrr,
     buf, buflen)
     int op;
     char *dname;
     int class, type;
     char *data;
     int datalen;
     struct rrec *newrr;
     char *buf;
     int buflen;

     res_send(msg, msglen, answer, anslen)
     char *msg;
     int msglen;
     char *answer;
     int anslen;

     res_init()

     dn_comp(exp_dn, comp_dn, length, dnptrs, lastdnptr)
     char *exp_dn, *comp_dn;
     int length;
     char **dnptrs, **lastdnptr;

     dn_expand(msg, eomorig, comp_dn, exp_dn, length)
     char *msg, *eomorig, *comp_dn, exp_dn;
     int length;

DESCRIPTION
     These routines are used for making, sending and interpreting
     packets for use with Internet domain name servers.  Global
     information that is used by the resolver routines is kept in
     the variable __r_e_s.  Most of the values have reasonable
     defaults and can be ignored.  Options stored in __r_e_s._o_p_t_i_o_n_s
     are defined in _r_e_s_o_l_v._h and are as follows.  Options are
     stored a simple bit mask containing the bitwise ``or'' of
     the options enabled.

     RES_INIT
	  True if the initial name server address and default
	  domain name are initialized (i.e., _r_e_s__i_n_i_t has been
	  called).



Printed 11/26/99	November 21, 1987			1






RESOLVER(3)	    UNIX Programmer's Manual	      RESOLVER(3)



     RES_DEBUG
	  Print debugging messages.

     RES_AAONLY
	  Accept authoritative answers only.  With this option,
	  _r_e_s__s_e_n_d should continue until it finds an authorita-
	  tive answer or finds an error.  Currently this is not
	  implemented.

     RES_USEVC
	  Use TCP connections for queries instead of UDP
	  datagrams.

     RES_STAYOPEN
	  Used with RES_USEVC to keep the TCP connection open
	  between queries.  This is useful only in programs that
	  regularly do many queries.  UDP should be the normal
	  mode used.

     RES_IGNTC
	  Unused currently (ignore truncation errors, i.e., don't
	  retry with TCP).

     RES_RECURSE
	  Set the recursion-desired bit in queries.  This is the
	  default.  ( _r_e_s__s_e_n_d does not do iterative queries and
	  expects the name server to handle recursion.)

     RES_DEFNAMES
	  If set, _r_e_s__m_k_q_u_e_r_y will append the default domain name
	  to single-component names (those that do not contain a
	  dot).  This is the default.

     RES_DNSRCH
	  If this option is set, the standard host lookup routine
	  _g_e_t_h_o_s_t_b_y_n_a_m_e(3) will search for host names in the
	  current domain and in parent domains; see _h_o_s_t_n_a_m_e(7).

     _R_e_s__i_n_i_t

     reads the initialization file to get the default domain name
     and the Internet address of the initial hosts running the
     name server.  If this line does not exist, the host running
     the resolver is tried.  _R_e_s__m_k_q_u_e_r_y makes a standard query
     message and places it in _b_u_f.  _R_e_s__m_k_q_u_e_r_y will return the
     size of the query or -1 if the query is larger than _b_u_f_l_e_n.
     _O_p is usually QUERY but can be any of the query types
     defined in _n_a_m_e_s_e_r._h.  _D_n_a_m_e is the domain name.  If _d_n_a_m_e
     consists of a single label and the RES_DEFNAMES flag is
     enabled (the default), the current domain name will be
     appended to _d_n_a_m_e.  The current domain name is defined by
     the hostname or is specified in a system file; it can be



Printed 11/26/99	November 21, 1987			2






RESOLVER(3)	    UNIX Programmer's Manual	      RESOLVER(3)



     overridden by the environment variable LOCALDOMAIN.  _N_e_w_r_r
     is currently unused but is intended for making update mes-
     sages.

     _R_e_s__s_e_n_d sends a query to name servers and returns an
     answer.  It will call _r_e_s__i_n_i_t if RES_INIT is not set, send
     the query to the local name server, and handle timeouts and
     retries.  The length of the message is returned, or -1 if
     there were errors.

     _D_n__e_x_p_a_n_d expands the compressed domain name _c_o_m_p__d_n to a
     full domain name.	Expanded names are converted to upper
     case.  _M_s_g is a pointer to the beginning of the message,
     _e_x_p__d_n is a pointer to a buffer of size _l_e_n_g_t_h for the
     result.  The size of compressed name is returned or -1 if
     there was an error.

     _D_n__c_o_m_p compresses the domain name _e_x_p__d_n and stores it in
     _c_o_m_p__d_n.  The size of the compressed name is returned or -1
     if there were errors.  _l_e_n_g_t_h _i_s _t_h_e _s_i_z_e _o_f _t_h_e _c_o_m_p__d_n.
     _D_n_p_t_r_s is a list of pointers to previously compressed names
     in the current message.  The first pointer points to to the
     beginning of the message and the list ends with NULL.
     _l_a_s_t_d_n_p_t_r is a pointer to the end of the array pointed to
     _d_n_p_t_r_s.  A side effect is to update the list of pointers for
     labels inserted into the message by _d_n__c_o_m_p as the name is
     compressed.  If _d_n_p_t_r is NULL, names are not compressed.  If
     _l_a_s_t_d_n_p_t_r is NULL, the list of labels is not updated.

FILES
     /etc/resolv.conf	 see resolver(5)

SEE ALSO
     gethostbyname(3), named(8), resolver(5), hostname(7),
     RFC882, RFC883, RFC973, RFC974,
     SMM:11 Name Server Operations Guide for BIND



















Printed 11/26/99	November 21, 1987			3



