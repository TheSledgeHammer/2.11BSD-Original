


GETPRIORITY(2)	    UNIX Programmer's Manual	   GETPRIORITY(2)



NAME
     getpriority, setpriority - get/set program scheduling prior-
     ity

SYNOPSIS
     #include <sys/resource.h>

     prio = getpriority(which, who)
     int prio, which, who;

     setpriority(which, who, prio)
     int which, who, prio;

DESCRIPTION
     The scheduling priority of the process, process group, or
     user, as indicated by _w_h_i_c_h and _w_h_o is obtained with the
     _g_e_t_p_r_i_o_r_i_t_y call and set with the _s_e_t_p_r_i_o_r_i_t_y call.  _W_h_i_c_h
     is one of PRIO_PROCESS, PRIO_PGRP, or PRIO_USER, and _w_h_o is
     interpreted relative to _w_h_i_c_h (a process identifier for
     PRIO_PROCESS, process group identifier for PRIO_PGRP, and a
     user ID for PRIO_USER).  A zero value of _w_h_o denotes the
     current process, process group, or user.  _P_r_i_o is a value in
     the range -20 to 20.  The default priority is 0; lower
     priorities cause more favorable scheduling.

     The _g_e_t_p_r_i_o_r_i_t_y call returns the highest priority (lowest
     numerical value) enjoyed by any of the specified processes.
     The _s_e_t_p_r_i_o_r_i_t_y call sets the priorities of all of the
     specified processes to the specified value.  Only the
     super-user may lower priorities.

RETURN VALUE
     Since _g_e_t_p_r_i_o_r_i_t_y can legitimately return the value -1, it
     is necessary to clear the external variable _e_r_r_n_o prior to
     the call, then check it afterward to determine if a -1 is an
     error or a legitimate value.  The _s_e_t_p_r_i_o_r_i_t_y call returns 0
     if there is no error, or -1 if there is.

ERRORS
     _G_e_t_p_r_i_o_r_i_t_y and _s_e_t_p_r_i_o_r_i_t_y may return one of the following
     errors:

     [ESRCH]	    No process was located using the _w_h_i_c_h and
		    _w_h_o values specified.

     [EINVAL]	    _W_h_i_c_h was not one of PRIO_PROCESS, PRIO_PGRP,
		    or PRIO_USER.

     In addition to the errors indicated above, _s_e_t_p_r_i_o_r_i_t_y may
     fail with one of the following errors returned:

     [EPERM]	    A process was located, but neither its



Printed 11/26/99	  May 22, 1986				1






GETPRIORITY(2)	    UNIX Programmer's Manual	   GETPRIORITY(2)



		    effective nor real user ID matched the effec-
		    tive user ID of the caller.

     [EACCES]	    A non super-user attempted to lower a process
		    priority.

SEE ALSO
     nice(1), fork(2), renice(8)















































Printed 11/26/99	  May 22, 1986				2



