


CHMOD(2)	    UNIX Programmer's Manual		 CHMOD(2)



NAME
     chmod - change mode of file

SYNOPSIS
     chmod(path, mode)
     char *path;
     int mode;

     fchmod(fd, mode)
     int fd, mode;

DESCRIPTION
     The file whose name is given by _p_a_t_h or referenced by the
     descriptor _f_d has its mode changed to _m_o_d_e.  Modes are con-
     structed by _o_r'ing together some combination of the follow-
     ing, defined in <_s_y_s/_i_n_o_d_e._h>:

	  ISUID   04000   set user ID on execution
	  ISGID   02000   set group ID on execution
	  ISVTX   01000   `sticky bit' (see below)
	  IREAD   00400   read by owner
	  IWRITE  00200   write by owner
	  IEXEC   00100   execute (search on directory) by owner
		  00070   read, write, execute (search) by group
		  00007   read, write, execute (search) by others

     If an executable file is set up for sharing (this is the
     default) then mode ISVTX (the `sticky bit') prevents the
     system from abandoning the swap-space image of the program-
     text portion of the file when its last user terminates.
     Ability to set this bit on executable files is restricted to
     the super-user.

     If mode ISVTX (the `sticky bit') is set on a directory, an
     unprivileged user may not delete or rename files of other
     users in that directory.  For more details of the properties
     of the sticky bit, see _s_t_i_c_k_y(8).

     Only the owner of a file (or the super-user) may change the
     mode.

     Writing or changing the owner of a file turns off the set-
     user-id and set-group-id bits unless the user is the super-
     user.  This makes the system somewhat more secure by pro-
     tecting set-user-id (set-group-id) files from remaining
     set-user-id (set-group-id) if they are modified, at the
     expense of a degree of compatibility.

RETURN VALUE
     Upon successful completion, a value of 0 is returned.  Oth-
     erwise, a value of -1 is returned and _e_r_r_n_o is set to indi-
     cate the error.



Printed 11/26/99	  May 13, 1986				1






CHMOD(2)	    UNIX Programmer's Manual		 CHMOD(2)



ERRORS
     _C_h_m_o_d will fail and the file mode will be unchanged if:

     [ENOTDIR]	    A component of the path prefix is not a
		    directory.

     [EINVAL]	    The pathname contains a character with the
		    high-order bit set.

     [ENAMETOOLONG] A component of a pathname exceeded 255 char-
		    acters, or an entire path name exceeded 1023
		    characters.

     [ENOENT]	    The named file does not exist.

     [EACCES]	    Search permission is denied for a component
		    of the path prefix.

     [ELOOP]	    Too many symbolic links were encountered in
		    translating the pathname.

     [EPERM]	    The effective user ID does not match the
		    owner of the file and the effective user ID
		    is not the super-user.

     [EROFS]	    The named file resides on a read-only file
		    system.

     [EFAULT]	    _P_a_t_h points outside the process's allocated
		    address space.

     [EIO]	    An I/O error occurred while reading from or
		    writing to the file system.

     _F_c_h_m_o_d will fail if:

     [EBADF]	    The descriptor is not valid.

     [EINVAL]	    _F_d refers to a socket, not to a file.

     [EROFS]	    The file resides on a read-only file system.

     [EIO]	    An I/O error occurred while reading from or
		    writing to the file system.

SEE ALSO
     chmod(1), open(2), chown(2), stat(2), sticky(8)








Printed 11/26/99	  May 13, 1986				2



