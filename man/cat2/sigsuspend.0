


SIGSUSPEND(2)	    UNIX Programmer's Manual	    SIGSUSPEND(2)



NAME
     sigsuspend - atomically release blocked signals and wait for
     interrupt

SYNOPSIS
     #include <signal.h>

     _i_n_t
     sigsuspend(sigmask)
     _s_i_g_s_e_t__t *_s_i_g_m_a_s_k

DESCRIPTION
     Sigsuspend() temporarily changes the blocked signal mask to
     the set to which _s_i_g_m_a_s_k points, and then waits for a signal
     to arrive; on return the previous set of masked signals is
     restored.	The signal mask set is usually empty to indicate
     that all signals are to be unblocked for the duration of the
     call.

     In normal usage, a signal is blocked using sigprocmask(2) to
     begin a critical section, variables modified on the
     occurrence of the signal are examined to determine that
     there is no work to be done, and the process pauses awaiting
     work by using sigsuspend with the previous mask returned by
     sigprocmask.

RETURN VALUES
     The sigsuspend function always terminates by being inter-
     rupted, returning -1 with _e_r_r_n_o set to EINTR.  If EFAULT is
     set in _e_r_r_n_o then _s_e_t contains an invalid address.

SEE ALSO
     sigprocmask(2), sigaction(2), sigsetops(3)

STANDARDS
     The sigsuspend function call conforms to IEEE Std1003.1-1988
     (``POSIX'').


















Printed 11/26/99	September 3, 1997			1



