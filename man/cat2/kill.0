


KILL(2)             UNIX Programmer's Manual		  KILL(2)



NAME
     kill - send signal to a process

SYNOPSIS
     kill(pid, sig)
     int pid, sig;

DESCRIPTION
     _K_i_l_l sends the signal _s_i_g to a process, specified by the
     process number _p_i_d.  _S_i_g may be one of the signals specified
     in _s_i_g_v_e_c(2), or it may be 0, in which case error checking
     is performed but no signal is actually sent. This can be
     used to check the validity of _p_i_d.

     The sending and receiving processes must have the same
     effective user ID, otherwise this call is restricted to the
     super-user.  A single exception is the signal SIGCONT, which
     may always be sent to any descendant of the current process.

     If the process number is 0, the signal is sent to all
     processes in the sender's process group; this is a variant
     of _k_i_l_l_p_g(2).

     If the process number is -1 and the user is the super-user,
     the signal is broadcast universally except to system
     processes and the process sending the signal.  If the pro-
     cess number is -1 and the user is not the super-user, the
     signal is broadcast universally to all processes with the
     same uid as the user except the process sending the signal.
     No error is returned if any process could be signaled.

     For compatibility with System V, if the process number is
     negative but not -1, the signal is sent to all processes
     whose process group ID is equal to the absolute value of the
     process number.  This is a variant of _k_i_l_l_p_g(2).

     Processes may send signals to themselves.

RETURN VALUE
     Upon successful completion, a value of 0 is returned.  Oth-
     erwise, a value of -1 is returned and _e_r_r_n_o is set to indi-
     cate the error.

ERRORS
     _K_i_l_l will fail and no signal will be sent if any of the fol-
     lowing occur:

     [EINVAL]	    _S_i_g is not a valid signal number.

     [ESRCH]	    No process can be found corresponding to that
		    specified by _p_i_d.




Printed 11/26/99	  May 14, 1986				1






KILL(2)             UNIX Programmer's Manual		  KILL(2)



     [ESRCH]	    The process id was given as 0 but the sending
		    process does not have a process group.

     [EPERM]	    The sending process is not the super-user and
		    its effective user id does not match the
		    effective user-id of the receiving process.
		    When signaling a process group, this error
		    was returned if any members of the group
		    could not be signaled.

SEE ALSO
     getpid(2), getpgrp(2), killpg(2), sigvec(2)











































Printed 11/26/99	  May 14, 1986				2



