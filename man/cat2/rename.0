


RENAME(2)	    UNIX Programmer's Manual		RENAME(2)



NAME
     rename - change the name of a file

SYNOPSIS
     rename(from, to)
     char *from, *to;

DESCRIPTION
     _R_e_n_a_m_e causes the link named _f_r_o_m to be renamed as _t_o.  If
     _t_o exists, then it is first removed.  Both _f_r_o_m and _t_o must
     be of the same type (that is, both directories or both non-
     directories), and must reside on the same file system.

     _R_e_n_a_m_e guarantees that an instance of _t_o will always exist,
     even if the system should crash in the middle of the opera-
     tion.

     If the final component of _f_r_o_m is a symbolic link, the sym-
     bolic link is renamed, not the file or directory to which it
     points.

CAVEAT
     The system can deadlock if a loop in the file system graph
     is present.  This loop takes the form of an entry in direc-
     tory "a", say "a/foo", being a hard link to directory "b",
     and an entry in directory "b", say "b/bar", being a hard
     link to directory "a".  When such a loop exists and two
     separate processes attempt to perform "rename a/foo b/bar"
     and "rename b/bar a/foo", respectively, the system may
     deadlock attempting to lock both directories for modifica-
     tion.  Hard links to directories should be replaced by sym-
     bolic links by the system administrator.

RETURN VALUE
     A 0 value is returned if the operation succeeds, otherwise
     _r_e_n_a_m_e returns -1 and the global variable _e_r_r_n_o indicates
     the reason for the failure.

ERRORS
     _R_e_n_a_m_e will fail and neither of the argument files will be
     affected if any of the following are true:

     [EINVAL]	    Either pathname contains a character with the
		    high-order bit set.

     [ENAMETOOLONG] A component of either pathname exceeded 255
		    characters, or the entire length of either
		    path name exceeded 1023 characters.

     [ENOENT]	    A component of the _f_r_o_m path does not exist,
		    or a path prefix of FIto _d_o_e_s _n_o_t _e_x_i_s_t.




Printed 11/26/99	  May 22, 1986				1






RENAME(2)	    UNIX Programmer's Manual		RENAME(2)



     [_E_A_C_C_E_S]	    A component of either path prefix denies
		    search permission.

     [EACCES]	    The requested link requires writing in a
		    directory with a mode that denies write per-
		    mission.

     [EPERM]	    The directory containing _f_r_o_m is marked
		    sticky, and neither the containing directory
		    nor _f_r_o_m are owned by the effective user ID.

     [EPERM]	    The _t_o file exists, the directory containing
		    _t_o is marked sticky, and neither the contain-
		    ing directory nor _t_o are owned by the effec-
		    tive user ID.

     [ELOOP]	    Too many symbolic links were encountered in
		    translating either pathname.

     [ENOTDIR]	    A component of either path prefix is not a
		    directory.

     [ENOTDIR]	    _F_r_o_m is a directory, but _t_o is not a direc-
		    tory.

     [EISDIR]	    _T_o is a directory, but _f_r_o_m is not a direc-
		    tory.

     [EXDEV]	    The link named by _t_o and the file named by
		    _f_r_o_m are on different logical devices (file
		    systems).  Note that this error code will not
		    be returned if the implementation permits
		    cross-device links.

     [ENOSPC]	    The directory in which the entry for the new
		    name is being placed cannot be extended
		    because there is no space left on the file
		    system containing the directory.

     [EDQUOT]	    The directory in which the entry for the new
		    name is being placed cannot be extended
		    because the user's quota of disk blocks on
		    the file system containing the directory has
		    been exhausted.

     [EIO]	    An I/O error occurred while making or updat-
		    ing a directory entry.

     [EROFS]	    The requested link requires writing in a
		    directory on a read-only file system.

     [EFAULT]	    _P_a_t_h points outside the process's allocated



Printed 11/26/99	  May 22, 1986				2






RENAME(2)	    UNIX Programmer's Manual		RENAME(2)



		    address space.

     [EINVAL]	    _F_r_o_m is a parent directory of _t_o, or an
		    attempt is made to rename ``.'' or ``..''.

     [ENOTEMPTY]    _T_o is a directory and is not empty.

SEE ALSO
     open(2)














































Printed 11/26/99	  May 22, 1986				3



