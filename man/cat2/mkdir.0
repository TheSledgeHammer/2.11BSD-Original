


MKDIR(2)	    UNIX Programmer's Manual		 MKDIR(2)



NAME
     mkdir - make a directory file

SYNOPSIS
     mkdir(path, mode)
     char *path;
     int mode;

DESCRIPTION
     _M_k_d_i_r creates a new directory file with name _p_a_t_h.  The mode
     of the new file is initialized from _m_o_d_e.	(The protection
     part of the mode is modified by the process's mode mask; see
     _u_m_a_s_k(2)).

     The directory's owner ID is set to the process's effective
     user ID.  The directory's group ID is set to that of the
     parent directory in which it is created.

     The low-order 9 bits of mode are modified by the process's
     file mode creation mask: all bits set in the process's file
     mode creation mask are cleared.  See _u_m_a_s_k(2).

RETURN VALUE
     A 0 return value indicates success.  A -1 return value indi-
     cates an error, and an error code is stored in _e_r_r_n_o.

ERRORS
     _M_k_d_i_r will fail and no directory will be created if:

     [ENOTDIR]	    A component of the path prefix is not a
		    directory.

     [EINVAL]	    The pathname contains a character with the
		    high-order bit set.

     [ENAMETOOLONG] A component of a pathname exceeded 255 char-
		    acters, or an entire path name exceeded 1023
		    characters.

     [ENOENT]	    A component of the path prefix does not
		    exist.

     [EACCES]	    Search permission is denied for a component
		    of the path prefix.

     [ELOOP]	    Too many symbolic links were encountered in
		    translating the pathname.

     [EPERM]	    The _p_a_t_h argument contains a byte with the
		    high-order bit set.

     [EROFS]	    The named file resides on a read-only file



Printed 11/26/99	 August 26, 1985			1






MKDIR(2)	    UNIX Programmer's Manual		 MKDIR(2)



		    system.

     [EEXIST]	    The named file exists.

     [ENOSPC]	    The directory in which the entry for the new
		    directory is being placed cannot be extended
		    because there is no space left on the file
		    system containing the directory.

     [ENOSPC]	    The new directory cannot be created because
		    there there is no space left on the file sys-
		    tem that will contain the directory.

     [ENOSPC]	    There are no free inodes on the file system
		    on which the directory is being created.

     [EDQUOT]	    The directory in which the entry for the new
		    directory is being placed cannot be extended
		    because the user's quota of disk blocks on
		    the file system containing the directory has
		    been exhausted.

     [EDQUOT]	    The new directory cannot be created because
		    the user's quota of disk blocks on the file
		    system that will contain the directory has
		    been exhausted.

     [EDQUOT]	    The user's quota of inodes on the file system
		    on which the directory is being created has
		    been exhausted.

     [EIO]	    An I/O error occurred while making the direc-
		    tory entry or allocating the inode.

     [EIO]	    An I/O error occurred while reading from or
		    writing to the file system.

     [EFAULT]	    _P_a_t_h points outside the process's allocated
		    address space.

SEE ALSO
     chmod(2), stat(2), umask(2)













Printed 11/26/99	 August 26, 1985			2



