


OD(1)		    UNIX Programmer's Manual		    OD(1)



NAME
     od - octal, decimal, hex, ascii dump

SYNOPSIS
     od [ -format ] [ file ] [ [+]offset[.][b] [label] ]

DESCRIPTION
     _O_d displays _f_i_l_e, or it's standard input, in one or more
     dump formats as selected by the first argument.  If the
     first argument is missing, -o is the default.  Dumping con-
     tinues until end-of-file.

     The meanings of the format argument characters are:

     a	  Interpret bytes as characters and display them with
	  their ACSII names.  If the p character is given also,
	  then bytes with even parity are underlined.  The P
	  character causes bytes with odd parity to be under-
	  lined.  Otherwise the parity bit is ignored.

     b	  Interpret bytes as unsigned octal.

     c	  Interpret bytes as ASCII characters.	Certain non-
	  graphic characters appear as C escapes: null=\0,
	  backspace=\b, formfeed=\f, newline=\n, return=\r,
	  tab=\t; others appear as 3-digit octal numbers.  Bytes
	  with the parity bit set are displayed in octal.

     d	  Interpret (short) words as unsigned decimal.

     f	  Interpret long words as floating point.

     h	  Interpret (short) words as unsigned hexadecimal.

     i	  Interpret (short) words as signed decimal.

     l	  Interpret long words as signed decimal.

     o	  Interpret (short) words as unsigned octal.

     s[n] Look for strings of ascii graphic characters, ter-
	  minated with a null byte.  _N specifies the minimum
	  length string to be recognized.  By default, the
	  minimum length is 3 characters.

     v	  Show all data. By default, display lines that are
	  identical to the last line shown are not output, but
	  are indicated with an ``*'' in column 1.

     w[n] Specifies the number of input bytes to be interpreted
	  and displayed on each output line. If w is not speci-
	  fied, 16 bytes are read for each display line.  If _n is



Printed 11/26/99	 April 29, 1985                         1






OD(1)		    UNIX Programmer's Manual		    OD(1)



	  not specified, it defaults to 32.

     x	  Interpret (short) words as hexadecimal.

     An upper case format character implies the long or double
     precision form of the object.

     The _o_f_f_s_e_t argument specifies the byte offset into the file
     where dumping is to commence.  By default this argument is
     interpreted in octal.  A different radix can be specified;
     If ``.'' is appended to the argument, then _o_f_f_s_e_t is inter-
     preted in decimal.  If _o_f_f_s_e_t begins with ``x'' or ``0x'',
     it is interpreted in hexadecimal.	If ``b'' (``B'') is
     appended, the offset is interpreted as a block count, where
     a block is 512 (1024) bytes.  If the _f_i_l_e argument is omit-
     ted, an _o_f_f_s_e_t argument must be preceded by ``+''.

     The radix of the displayed address will be the same as the
     radix of the _o_f_f_s_e_t, if specified; otherwise it will be
     octal.

     _L_a_b_e_l will be interpreted as a pseudo-address for the first
     byte displayed.  It will be shown in ``()'' following the
     file offset.  It is intended to be used with core images to
     indicate the real memory address.	The syntax for _l_a_b_e_l is
     identical to that for _o_f_f_s_e_t.

SEE ALSO
     adb(1)

BUGS
     A file name argument can't start with ``+''.  A hexadecimal
     offset can't be a block count.  Only one file name argument
     can be given.

     It is an historical botch to require specification of
     object, radix, and sign representation in a single character
     argument.

















Printed 11/26/99	 April 29, 1985                         2



