


CHMOD(1)	    UNIX Programmer's Manual		 CHMOD(1)



NAME
     chmod - change mode

SYNOPSIS
     chmod [ -Rf ] mode file ...

DESCRIPTION
     The mode of each named file is changed according to _m_o_d_e,
     which may be absolute or symbolic.  An absolute _m_o_d_e is an
     octal number constructed from the OR of the following modes:

     4000      set user ID on execution
     2000      set group ID on execution
     1000      sticky bit, see _c_h_m_o_d(2)
     0400      read by owner
     0200      write by owner
     0100      execute (search in directory) by owner
     0070      read, write, execute (search) by group
     0007      read, write, execute (search) by others

     A symbolic _m_o_d_e has the form:

	  [_w_h_o] _o_p _p_e_r_m_i_s_s_i_o_n [_o_p _p_e_r_m_i_s_s_i_o_n] ...

     The _w_h_o part is a combination of the letters u (for user's
     permissions), g (group) and o (other).  The letter a stands
     for all, or ugo.  If _w_h_o is omitted, the default is _a but
     the setting of the file creation mask (see umask(2)) is
     taken into account.

     _O_p can be + to add _p_e_r_m_i_s_s_i_o_n to the file's mode, - to take
     away _p_e_r_m_i_s_s_i_o_n and = to assign _p_e_r_m_i_s_s_i_o_n absolutely (all
     other bits will be reset).

     _P_e_r_m_i_s_s_i_o_n is any combination of the letters r (read), w
     (write), x (execute), X (set execute only if file is a
     directory or some other execute bit is set), s (set owner or
     group id) and t (save text - sticky).  Letters u, g, or o
     indicate that _p_e_r_m_i_s_s_i_o_n is to be taken from the current
     mode. Omitting _p_e_r_m_i_s_s_i_o_n is only useful with = to take away
     all permissions.

     When the -R option is given, _c_h_m_o_d recursively descends its
     directory arguments setting the mode for each file as
     described above.  When symbolic links are encountered, their
     mode is not changed and they are not traversed.

     If the -f option is given, _c_h_m_o_d will not complain if it
     fails to change the mode on a file.

EXAMPLES




Printed 11/26/99	  May 22, 1986				1






CHMOD(1)	    UNIX Programmer's Manual		 CHMOD(1)



     The first example denies write permission to others, the
     second makes a file executable by all if it is executable by
     anyone:

	  chmod o-w file
	  chmod +X file

     Multiple symbolic modes separated by commas may be given.
     Operations are performed in the order specified.  The letter
     s is only useful with u or g.

     Only the owner of a file (or the super-user) may change its
     mode.

SEE ALSO
     ls(1), chmod(2), stat(2), umask(2), chown(8)







































Printed 11/26/99	  May 22, 1986				2



