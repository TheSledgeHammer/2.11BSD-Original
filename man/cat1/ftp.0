


FTP(1)		    UNIX Programmer's Manual		   FTP(1)



NAME
     ftp - ARPANET file transfer program

SYNOPSIS
     ftp [ -v ] [ -d ] [ -i ] [ -n ] [ -g ] [ host ]

DESCRIPTION
     _F_t_p is the user interface to the ARPANET standard File
     Transfer Protocol.  The program allows a user to transfer
     files to and from a remote network site.

     The client host with which _f_t_p is to communicate may be
     specified on the command line.  If this is done, _f_t_p will
     immediately attempt to establish a connection to an FTP
     server on that host; otherwise, _f_t_p will enter its command
     interpreter and await instructions from the user.	When _f_t_p
     is awaiting commands from the user the prompt "ftp>" is pro-
     vided to the user.  The following commands are recognized by
     _f_t_p:

     ! [ _c_o_m_m_a_n_d [ _a_r_g_s ] ]
	  Invoke an interactive shell on the local machine.  If
	  there are arguments, the first is taken to be a command
	  to execute directly, with the rest of the arguments as
	  its arguments.

     $ _m_a_c_r_o-_n_a_m_e [ _a_r_g_s ]
	  Execute the macro _m_a_c_r_o-_n_a_m_e that was defined with the
	  macdef command.  Arguments are passed to the macro
	  unglobbed.

     account [ _p_a_s_s_w_d ]
	  Supply a supplemental password required by a remote
	  system for access to resources once a login has been
	  successfully completed.  If no argument is included,
	  the user will be prompted for an account password in a
	  non-echoing input mode.

     append _l_o_c_a_l-_f_i_l_e [ _r_e_m_o_t_e-_f_i_l_e ]
	  Append a local file to a file on the remote machine.
	  If _r_e_m_o_t_e-_f_i_l_e is left unspecified, the local file name
	  is used in naming the remote file after being altered
	  by any _n_t_r_a_n_s or _n_m_a_p setting.  File transfer uses the
	  current settings for _t_y_p_e, _f_o_r_m_a_t, _m_o_d_e, and _s_t_r_u_c_t_u_r_e.

     ascii
	  Set the file transfer _t_y_p_e to network ASCII.	This is
	  the default type.

     bell Arrange that a bell be sounded after each file transfer
	  command is completed.




Printed 11/24/99	 March 14, 1989                         1






FTP(1)		    UNIX Programmer's Manual		   FTP(1)



     binary
	  Set the file transfer _t_y_p_e to support binary image
	  transfer.

     bye  Terminate the FTP session with the remote server and
	  exit _f_t_p.  An end of file will also terminate the ses-
	  sion and exit.

     case Toggle remote computer file name case mapping during
	  mget commands.  When case is on (default is off),
	  remote computer file names with all letters in upper
	  case are written in the local directory with the
	  letters mapped to lower case.

     cd _r_e_m_o_t_e-_d_i_r_e_c_t_o_r_y
	  Change the working directory on the remote machine to
	  _r_e_m_o_t_e-_d_i_r_e_c_t_o_r_y.

     cdup Change the remote machine working directory to the
	  parent of the current remote machine working directory.

     chmod _m_o_d_e _f_i_l_e-_n_a_m_e
	  Change the permission modes the file _f_i_l_e-_n_a_m_e on the
	  remote sytem to _m_o_d_e.

     close
	  Terminate the FTP session with the remote server, and
	  return to the command interpreter.  Any defined macros
	  are erased.

     cr   Toggle carriage return stripping during ascii type file
	  retrieval.  Records are denoted by a carriage
	  return/linefeed sequence during ascii type file
	  transfer.  When cr is on (the default), carriage
	  returns are stripped from this sequence to conform with
	  the UNIX single linefeed record delimiter.  Records on
	  non-UNIX remote systems may contain single linefeeds;
	  when an ascii type transfer is made, these linefeeds
	  may be distinguished from a record delimiter only when
	  cr is off.

     delete _r_e_m_o_t_e-_f_i_l_e
	  Delete the file _r_e_m_o_t_e-_f_i_l_e on the remote machine.

     debug [ _d_e_b_u_g-_v_a_l_u_e ]
	  Toggle debugging mode.  If an optional _d_e_b_u_g-_v_a_l_u_e is
	  specified it is used to set the debugging level.  When
	  debugging is on, _f_t_p prints each command sent to the
	  remote machine, preceded by the string "-->".

     dir [ _r_e_m_o_t_e-_d_i_r_e_c_t_o_r_y ] [ _l_o_c_a_l-_f_i_l_e ]
	  Print a listing of the directory contents in the



Printed 11/24/99	 March 14, 1989                         2






FTP(1)		    UNIX Programmer's Manual		   FTP(1)



	  directory, _r_e_m_o_t_e-_d_i_r_e_c_t_o_r_y, and, optionally, placing
	  the output in _l_o_c_a_l-_f_i_l_e.  If interactive prompting is
	  on, _f_t_p will prompt the user to verify that the last
	  argument is indeed the target local file for receiving
	  dir output.  If no directory is specified, the current
	  working directory on the remote machine is used.  If no
	  local file is specified, or _l_o_c_a_l-_f_i_l_e is -, output
	  comes to the terminal.

     disconnect
	  A synonym for close.

     form _f_o_r_m_a_t
	  Set the file transfer _f_o_r_m to _f_o_r_m_a_t.  The default for-
	  mat is "file".

     get _r_e_m_o_t_e-_f_i_l_e [ _l_o_c_a_l-_f_i_l_e ]
	  Retrieve the _r_e_m_o_t_e-_f_i_l_e and store it on the local
	  machine.  If the local file name is not specified, it
	  is given the same name it has on the remote machine,
	  subject to alteration by the current _c_a_s_e, _n_t_r_a_n_s, and
	  _n_m_a_p settings.  The current settings for _t_y_p_e, _f_o_r_m,
	  _m_o_d_e, and _s_t_r_u_c_t_u_r_e are used while transferring the
	  file.

     glob Toggle filename expansion for mdelete, mget and mput.
	  If globbing is turned off with glob, the file name
	  arguments are taken literally and not expanded.  Glob-
	  bing for mput is done as in csh(1).  For mdelete and
	  mget, each remote file name is expanded separately on
	  the remote machine and the lists are not merged.
	  Expansion of a directory name is likely to be different
	  from expansion of the name of an ordinary file: the
	  exact result depends on the foreign operating system
	  and ftp server, and can be previewed by doing
	  `mls _r_e_m_o_t_e-_f_i_l_e_s -'.  Note:	mget and mput are not
	  meant to transfer entire directory subtrees of files.
	  That can be done by transferring a tar(1) archive of
	  the subtree (in binary mode).

     hash Toggle hash-sign (``#'') printing for each data block
	  transferred.	The size of a data block is 1024 bytes.

     help [ _c_o_m_m_a_n_d ]
	  Print an informative message about the meaning of _c_o_m_-
	  _m_a_n_d.  If no argument is given, _f_t_p prints a list of
	  the known commands.

     idle [ _s_e_c_o_n_d_s ]
	  Set the inactivity timer on the remote server to
	  _s_e_c_o_n_d_s seconds.  If _s_e_c_o_n_d_s is ommitted, the current
	  inactivity timer is printed.



Printed 11/24/99	 March 14, 1989                         3






FTP(1)		    UNIX Programmer's Manual		   FTP(1)



     lcd [ _d_i_r_e_c_t_o_r_y ]
	  Change the working directory on the local machine.  If
	  no _d_i_r_e_c_t_o_r_y is specified, the user's home directory is
	  used.

     ls [ _r_e_m_o_t_e-_d_i_r_e_c_t_o_r_y ] [ _l_o_c_a_l-_f_i_l_e ]
	  Print a listing of the contents of a directory on the
	  remote machine.  The listing includes any system-
	  dependent information that the server chooses to
	  include; for example, most UNIX systems will produce
	  output from the command "ls -l".  (See also nlist.) If
	  _r_e_m_o_t_e-_d_i_r_e_c_t_o_r_y is left unspecified, the current work-
	  ing directory is used.  If interactive prompting is on,
	  _f_t_p will prompt the user to verify that the last argu-
	  ment is indeed the target local file for receiving ls
	  output.  If no local file is specified, or if _l_o_c_a_l-
	  _f_i_l_e is -, the output is sent to the terminal.

     macdef _m_a_c_r_o-_n_a_m_e
	  Define a macro.  Subsequent lines are stored as the
	  macro _m_a_c_r_o-_n_a_m_e; a null line (consecutive newline
	  characters in a file or carriage returns from the ter-
	  minal) terminates macro input mode.  There is a limit
	  of 16 macros and 4096 total characters in all defined
	  macros.  Macros remain defined until a close command is
	  executed.  The macro processor interprets '$' and '\'
	  as special characters.  A '$' followed by a number (or
	  numbers) is replaced by the corresponding argument on
	  the macro invocation command line.  A '$' followed by
	  an 'i' signals that macro processor that the executing
	  macro is to be looped. On the first pass '$i' is
	  replaced by the first argument on the macro invocation
	  command line, on the second pass it is replaced by the
	  second argument, and so on.  A '\' followed by any
	  character is replaced by that character.  Use the '\'
	  to prevent special treatment of the '$'.

     mdelete [ _r_e_m_o_t_e-_f_i_l_e_s ]
	  Delete the _r_e_m_o_t_e-_f_i_l_e_s on the remote machine.

     mdir _r_e_m_o_t_e-_f_i_l_e_s _l_o_c_a_l-_f_i_l_e
	  Like dir, except multiple remote files may be speci-
	  fied.  If interactive prompting is on, _f_t_p will prompt
	  the user to verify that the last argument is indeed the
	  target local file for receiving mdir output.

     mget _r_e_m_o_t_e-_f_i_l_e_s
	  Expand the _r_e_m_o_t_e-_f_i_l_e_s on the remote machine and do a
	  get for each file name thus produced.  See glob for
	  details on the filename expansion.  Resulting file
	  names will then be processed according to _c_a_s_e, _n_t_r_a_n_s,
	  and _n_m_a_p settings.  Files are transferred into the



Printed 11/24/99	 March 14, 1989                         4






FTP(1)		    UNIX Programmer's Manual		   FTP(1)



	  local working directory, which can be changed with
	  `lcd directory'; new local directories can be created
	  with `! mkdir directory'.

     mkdir _d_i_r_e_c_t_o_r_y-_n_a_m_e
	  Make a directory on the remote machine.

     mls _r_e_m_o_t_e-_f_i_l_e_s _l_o_c_a_l-_f_i_l_e
	  Like nlist, except multiple remote files may be speci-
	  fied, and the _l_o_c_a_l-_f_i_l_e must be specified.  If
	  interactive prompting is on, _f_t_p will prompt the user
	  to verify that the last argument is indeed the target
	  local file for receiving mls output.

     mode [ _m_o_d_e-_n_a_m_e ]
	  Set the file transfer _m_o_d_e to _m_o_d_e-_n_a_m_e.  The default
	  mode is "stream" mode.

     modtime _f_i_l_e-_n_a_m_e
	  Show the last modification time of the file on the
	  remote machine.

     mput _l_o_c_a_l-_f_i_l_e_s
	  Expand wild cards in the list of local files given as
	  arguments and do a put for each file in the resulting
	  list.  See glob for details of filename expansion.
	  Resulting file names will then be processed according
	  to _n_t_r_a_n_s and _n_m_a_p settings.

     newer _f_i_l_e-_n_a_m_e
	  Get the file only if the modification time of the
	  remote file is more recent that the file on the current
	  system. If the file does not exist on the current sys-
	  tem, the remote file is considered _n_e_w_e_r.  Otherwise,
	  this command is identical to get.

     nlist [ _r_e_m_o_t_e-_d_i_r_e_c_t_o_r_y ] [ _l_o_c_a_l-_f_i_l_e ]
	  Print a  list of the files of a directory on the remote
	  machine.  If _r_e_m_o_t_e-_d_i_r_e_c_t_o_r_y is left unspecified, the
	  current working directory is used.  If interactive
	  prompting is on, _f_t_p will prompt the user to verify
	  that the last argument is indeed the target local file
	  for receiving nlist output.  If no local file is speci-
	  fied, or if _l_o_c_a_l-_f_i_l_e is -, the output is sent to the
	  terminal.

     nmap [ _i_n_p_a_t_t_e_r_n _o_u_t_p_a_t_t_e_r_n ]
	  Set or unset the filename mapping mechanism.	If no
	  arguments are specified, the filename mapping mechanism
	  is unset.  If arguments are specified, remote filenames
	  are mapped during mput commands and put commands issued
	  without a specified remote target filename.  If



Printed 11/24/99	 March 14, 1989                         5






FTP(1)		    UNIX Programmer's Manual		   FTP(1)



	  arguments are specified, local filenames are mapped
	  during mget commands and get commands issued without a
	  specified local target filename.  This command is use-
	  ful when connecting to a non-UNIX remote computer with
	  different file naming conventions or practices.  The
	  mapping follows the pattern set by _i_n_p_a_t_t_e_r_n and _o_u_t_-
	  _p_a_t_t_e_r_n.  _I_n_p_a_t_t_e_r_n is a template for incoming
	  filenames (which may have already been processed
	  according to the ntrans and case settings).  Variable
	  templating is accomplished by including the sequences
	  '$1', '$2', ..., '$9' in _i_n_p_a_t_t_e_r_n.  Use '\' to prevent
	  this special treatment of the '$' character.	All other
	  characters are treated literally, and are used to
	  determine the nmap _i_n_p_a_t_t_e_r_n variable values.  For
	  example, given _i_n_p_a_t_t_e_r_n $1.$2 and the remote file name
	  "mydata.data", $1 would have the value "mydata", and $2
	  would have the value "data".	The _o_u_t_p_a_t_t_e_r_n determines
	  the resulting mapped filename.  The sequences '$1',
	  '$2', ...., '$9' are replaced by any value resulting
	  from the _i_n_p_a_t_t_e_r_n template.	The sequence '$0' is
	  replace by the original filename.  Additionally, the
	  sequence '[_s_e_q_1,_s_e_q_2]' is replaced by _s_e_q_1 if _s_e_q_1 is
	  not a null string; otherwise it is replaced by _s_e_q_2.
	  For example, the command "nmap $1.$2.$3
	  [$1,$2].[$2,file]" would yield the output filename
	  "myfile.data" for input filenames "myfile.data" and
	  "myfile.data.old", "myfile.file" for the input filename
	  "myfile", and "myfile.myfile" for the input filename
	  ".myfile".  Spaces may be included in _o_u_t_p_a_t_t_e_r_n, as in
	  the example: nmap $1 |sed "s/  *$//" > $1 .  Use the
	  '\' character to prevent special treatment of the '$',
	  '[', ']', and ',' characters.

     ntrans [ _i_n_c_h_a_r_s [ _o_u_t_c_h_a_r_s ] ]
	  Set or unset the filename character translation mechan-
	  ism.	If no arguments are specified, the filename char-
	  acter translation mechanism is unset.  If arguments are
	  specified, characters in remote filenames are
	  translated during mput commands and put commands issued
	  without a specified remote target filename.  If argu-
	  ments are specified, characters in local filenames are
	  translated during mget commands and get commands issued
	  without a specified local target filename.  This com-
	  mand is useful when connecting to a non-UNIX remote
	  computer with different file naming conventions or
	  practices.  Characters in a filename matching a charac-
	  ter in _i_n_c_h_a_r_s are replaced with the corresponding
	  character in _o_u_t_c_h_a_r_s.  If the character's position in
	  _i_n_c_h_a_r_s is longer than the length of _o_u_t_c_h_a_r_s, the
	  character is deleted from the file name.

     open _h_o_s_t [ _p_o_r_t ]



Printed 11/24/99	 March 14, 1989                         6






FTP(1)		    UNIX Programmer's Manual		   FTP(1)



	  Establish a connection to the specified _h_o_s_t FTP
	  server.  An optional port number may be supplied, in
	  which case, _f_t_p will attempt to contact an FTP server
	  at that port.  If the _a_u_t_o-_l_o_g_i_n option is on
	  (default), _f_t_p will also attempt to automatically log
	  the user in to the FTP server (see below).

     prompt
	  Toggle interactive prompting.  Interactive prompting
	  occurs during multiple file transfers to allow the user
	  to selectively retrieve or store files.  If prompting
	  is turned off (default is on), any mget or mput will
	  transfer all files, and any mdelete will delete all
	  files.

     proxy _f_t_p-_c_o_m_m_a_n_d
	  Execute an ftp command on a secondary control connec-
	  tion.  This command allows simultaneous connection to
	  two remote ftp servers for transferring files between
	  the two servers.  The first proxy command should be an
	  open, to establish the secondary control connection.
	  Enter the command "proxy ?" to see other ftp commands
	  executable on the secondary connection.  The following
	  commands behave differently when prefaced by proxy:
	  open will not define new macros during the auto-login
	  process, close will not erase existing macro defini-
	  tions, get and mget transfer files from the host on the
	  primary control connection to the host on the secondary
	  control connection, and put, mput, and append transfer
	  files from the host on the secondary control connection
	  to the host on the primary control connection.  Third
	  party file transfers depend upon support of the ftp
	  protocol PASV command by the server on the secondary
	  control connection.

     put _l_o_c_a_l-_f_i_l_e [ _r_e_m_o_t_e-_f_i_l_e ]
	  Store a local file on the remote machine.  If _r_e_m_o_t_e-
	  _f_i_l_e is left unspecified, the local file name is used
	  after processing according to any _n_t_r_a_n_s or _n_m_a_p set-
	  tings in naming the remote file.  File transfer uses
	  the current settings for _t_y_p_e, _f_o_r_m_a_t, _m_o_d_e, and _s_t_r_u_c_-
	  _t_u_r_e.

     pwd  Print the name of the current working directory on the
	  remote machine.

     quit A synonym for bye.

     quote _a_r_g_1 _a_r_g_2 ...
	  The arguments specified are sent, verbatim, to the
	  remote FTP server.




Printed 11/24/99	 March 14, 1989                         7






FTP(1)		    UNIX Programmer's Manual		   FTP(1)



     recv _r_e_m_o_t_e-_f_i_l_e [ _l_o_c_a_l-_f_i_l_e ]
	  A synonym for get.

     reget _r_e_m_o_t_e-_f_i_l_e [ _l_o_c_a_l-_f_i_l_e ]
	  Reget acts like get, except that if _l_o_c_a_l-_f_i_l_e exists
	  and is smaller than _r_e_m_o_t_e-_f_i_l_e, _l_o_c_a_l-_f_i_l_e is presumed
	  to be a partially transferred copy of _r_e_m_o_t_e-_f_i_l_e and
	  the transfer is continued from the apparent point of
	  failure. This command is useful when transferring very
	  large files over networks that are prone to dropping
	  connections.

     remotehelp [ _c_o_m_m_a_n_d-_n_a_m_e ]
	  Request help from the remote FTP server.  If a
	  _c_o_m_m_a_n_d-_n_a_m_e is specified it is supplied to the server
	  as well.

     remotestatus [ _f_i_l_e-_n_a_m_e ]
	  With no arguments, show status of remote machine. If
	  _f_i_l_e-_n_a_m_e is specified, show status of _f_i_l_e-_n_a_m_e on
	  remote machine.

     rename [ _f_r_o_m ] [ _t_o ]
	  Rename the file _f_r_o_m on the remote machine, to the file
	  _t_o.

     reset
	  Clear reply queue.  This command re-synchronizes
	  command/reply sequencing with the remote ftp server.
	  Resynchronization may be necessary following a viola-
	  tion of the ftp protocol by the remote server.

     restart _m_a_r_k_e_r
	  Restart the immediately following get or put at the
	  indicated _m_a_r_k_e_r. On UNIX systems, marker is usually a
	  byte offset into the file.

     rmdir _d_i_r_e_c_t_o_r_y-_n_a_m_e
	  Delete a directory on the remote machine.

     runique
	  Toggle storing of files on the local system with unique
	  filenames.  If a file already exists with a name equal
	  to the target local filename for a get or mget command,
	  a ".1" is appended to the name.  If the resulting name
	  matches another existing file, a ".2" is appended to
	  the original name.  If this process continues up to
	  ".99", an error message is printed, and the transfer
	  does not take place.	The generated unique filename
	  will be reported.  Note that runique will not affect
	  local files generated from a shell command (see below).
	  The default value is off.



Printed 11/24/99	 March 14, 1989                         8






FTP(1)		    UNIX Programmer's Manual		   FTP(1)



     send _l_o_c_a_l-_f_i_l_e [ _r_e_m_o_t_e-_f_i_l_e ]
	  A synonym for put.

     sendport
	  Toggle the use of PORT commands.  By default, _f_t_p will
	  attempt to use a PORT command when establishing a con-
	  nection for each data transfer.  The use of PORT com-
	  mands can prevent delays when performing multiple file
	  transfers. If the PORT command fails, _f_t_p will use the
	  default data port.  When the use of PORT commands is
	  disabled, no attempt will be made to use PORT commands
	  for each data transfer.  This is useful for certain FTP
	  implementations which do ignore PORT commands but,
	  incorrectly, indicate they've been accepted.

     site _a_r_g_1 _a_r_g_2 ...
	  The arguments specified are sent, verbatim, to the
	  remote FTP server as a SITE command.

     size _f_i_l_e-_n_a_m_e
	  Return size of _f_i_l_e-_n_a_m_e on remote machine.

     status
	  Show the current status of _f_t_p.

     struct [ _s_t_r_u_c_t-_n_a_m_e ]
	  Set the file transfer _s_t_r_u_c_t_u_r_e to _s_t_r_u_c_t-_n_a_m_e.  By
	  default "stream" structure is used.

     sunique
	  Toggle storing of files on remote machine under unique
	  file names.  Remote ftp server must support ftp proto-
	  col STOU command for successful completion.  The remote
	  server will report unique name.  Default value is off.

     system
	  Show the type of operating system running on the remote
	  machine.

     tenex
	  Set the file transfer type to that needed to talk to
	  TENEX machines.

     trace
	  Toggle packet tracing.

     type [ _t_y_p_e-_n_a_m_e ]
	  Set the file transfer _t_y_p_e to _t_y_p_e-_n_a_m_e.  If no type is
	  specified, the current type is printed.  The default
	  type is network ASCII.

     umask [ _n_e_w_m_a_s_k ]



Printed 11/24/99	 March 14, 1989                         9






FTP(1)		    UNIX Programmer's Manual		   FTP(1)



	  Set the default umask on the remote server to _n_e_w_m_a_s_k.
	  If _n_e_w_m_a_s_k is ommitted, the current umask is printed.

     user _u_s_e_r-_n_a_m_e [ _p_a_s_s_w_o_r_d ] [ _a_c_c_o_u_n_t ]
	  Identify yourself to the remote FTP server.  If the
	  password is not specified and the server requires it,
	  _f_t_p will prompt the user for it (after disabling local
	  echo).  If an account field is not specified, and the
	  FTP server requires it, the user will be prompted for
	  it.  If an account field is specified, an account com-
	  mand will be relayed to the remote server after the
	  login sequence is completed if the remote server did
	  not require it for logging in.  Unless _f_t_p is invoked
	  with "auto-login" disabled, this process is done
	  automatically on initial connection to the FTP server.

     verbose
	  Toggle verbose mode.	In verbose mode, all responses
	  from the FTP server are displayed to the user.  In
	  addition, if verbose is on, when a file transfer com-
	  pletes, statistics regarding the efficiency of the
	  transfer are reported.  By default, verbose is on.

     ? [ _c_o_m_m_a_n_d ]
	  A synonym for help.

     Command arguments which have embedded spaces may be quoted
     with quote (") marks.

ABORTING A FILE TRANSFER
     To abort a file transfer, use the terminal interrupt key
     (usually Ctrl-C).	Sending transfers will be immediately
     halted.  Receiving transfers will be halted by sending a ftp
     protocol ABOR command to the remote server, and discarding
     any further data received.  The speed at which this is
     accomplished depends upon the remote server's support for
     ABOR processing.  If the remote server does not support the
     ABOR command, an "ftp>" prompt will not appear until the
     remote server has completed sending the requested file.

     The terminal interrupt key sequence will be ignored when _f_t_p
     has completed any local processing and is awaiting a reply
     from the remote server.  A long delay in this mode may
     result from the ABOR processing described above, or from
     unexpected behavior by the remote server, including viola-
     tions of the ftp protocol.  If the delay results from unex-
     pected remote server behavior, the local _f_t_p program must be
     killed by hand.

FILE NAMING CONVENTIONS
     Files specified as arguments to _f_t_p commands are processed
     according to the following rules.



Printed 11/24/99	 March 14, 1989                        10






FTP(1)		    UNIX Programmer's Manual		   FTP(1)



     1)   If the file name "-" is specified, the stdin (for read-
	  ing) or stdout (for writing) is used.

     2)   If the first character of the file name is "|", the
	  remainder of the argument is interpreted as a shell
	  command.  _F_t_p then forks a shell, using _p_o_p_e_n(3) with
	  the argument supplied, and reads (writes) from the
	  stdout (stdin).  If the shell command includes spaces,
	  the argument must be quoted; e.g. ""| ls -lt"".  A par-
	  ticularly useful example of this mechanism is: "dir
	  |more".

     3)   Failing the above checks, if ``globbing'' is enabled,
	  local file names are expanded according to the rules
	  used in the _c_s_h(1); c.f. the _g_l_o_b command. If the _f_t_p
	  command expects a single local file ( .e.g.  put), only
	  the first filename generated by the "globbing" opera-
	  tion is used.

     4)   For mget commands and get commands with unspecified
	  local file names, the local filename is the remote
	  filename, which may be altered by a case, ntrans, or
	  nmap setting.  The resulting filename may then be
	  altered if runique is on.

     5)   For mput commands and put commands with unspecified
	  remote file names, the remote filename is the local
	  filename, which may be altered by a ntrans or nmap set-
	  ting.  The resulting filename may then be altered by
	  the remote server if sunique is on.

FILE TRANSFER PARAMETERS
     The FTP specification specifies many parameters which may
     affect a file transfer.  The _t_y_p_e may be one of "ascii",
     "image" (binary), "ebcdic", and "local byte size" (for PDP-
     10's and PDP-20's mostly).  _F_t_p supports the ascii and image
     types of file transfer, plus local byte size 8 for tenex
     mode transfers.

     _F_t_p supports only the default values for the remaining file
     transfer parameters: _m_o_d_e, _f_o_r_m, and _s_t_r_u_c_t.

OPTIONS
     Options may be specified at the command line, or to the com-
     mand interpreter.

     The -v (verbose on) option forces _f_t_p to show all responses
     from the remote server, as well as report on data transfer
     statistics.

     The -n option restrains _f_t_p from attempting "auto-login"
     upon initial connection.  If auto-login is enabled, _f_t_p will



Printed 11/24/99	 March 14, 1989                        11






FTP(1)		    UNIX Programmer's Manual		   FTP(1)



     check the ._n_e_t_r_c (see below) file in the user's home direc-
     tory for an entry describing an account on the remote
     machine.  If no entry exists, _f_t_p will prompt for the remote
     machine login name (default is the user identity on the
     local machine), and, if necessary, prompt for a password and
     an account with which to login.

     The -i option turns off interactive prompting during multi-
     ple file transfers.

     The -d option enables debugging.

     The -g option disables file name globbing.

THE .netrc FILE
     The .netrc file contains login and initialization informa-
     tion used by the auto-login process.  It resides in the
     user's home directory.  The following tokens are recognized;
     they may be separated by spaces, tabs, or new-lines:

     machine _n_a_m_e
	  Identify a remote machine name.  The auto-login process
	  searches the .netrc file for a machine token that
	  matches the remote machine specified on the _f_t_p command
	  line or as an open command argument.	Once a match is
	  made, the subsequent .netrc tokens are processed, stop-
	  ping when the end of file is reached or another machine
	  or a default token is encountered.

     default
	  This is the same as machine _n_a_m_e except that default
	  matches any name.  There can be only one default token,
	  and it must be after all machine tokens.  This is nor-
	  mally used as:
		default login anonymous password user@site
	  thereby giving the user _a_u_t_o_m_a_t_i_c anonymous ftp login
	  to machines not specified in .netrc. This can be over-
	  ridden by using the -n flag to disable auto-login.

     login _n_a_m_e
	  Identify a user on the remote machine.  If this token
	  is present, the auto-login process will initiate a
	  login using the specified name.

     password _s_t_r_i_n_g
	  Supply a password.  If this token is present, the
	  auto-login process will supply the specified string if
	  the remote server requires a password as part of the
	  login process.  Note that if this token is present in
	  the .netrc file for any user other than _a_n_o_n_y_m_o_u_s, _f_t_p
	  will abort the auto-login process if the .netrc is
	  readable by anyone besides the user.



Printed 11/24/99	 March 14, 1989                        12






FTP(1)		    UNIX Programmer's Manual		   FTP(1)



     account _s_t_r_i_n_g
	  Supply an additional account password.  If this token
	  is present, the auto-login process will supply the
	  specified string if the remote server requires an addi-
	  tional account password, or the auto-login process will
	  initiate an ACCT command if it does not.

     macdef _n_a_m_e
	  Define a macro.  This token functions like the _f_t_p mac-
	  def command functions.  A macro is defined with the
	  specified name; its contents begin with the next .netrc
	  line and continue until a null line (consecutive new-
	  line characters) is encountered.  If a macro named _i_n_i_t
	  is defined, it is automatically executed as the last
	  step in the auto-login process.

SEE ALSO
     ftpd(8)

BUGS
     Correct execution of many commands depends upon proper
     behavior by the remote server.

     An error in the treatment of carriage returns in the 4.2BSD
     UNIX ascii-mode transfer code has been corrected.	This
     correction may result in incorrect transfers of binary files
     to and from 4.2BSD servers using the ascii type.  Avoid this
     problem by using the binary image type.



























Printed 11/24/99	 March 14, 1989                        13



