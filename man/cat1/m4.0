


m4(1)		    UNIX Programmer's Manual		    m4(1)



NAME
     m4 - macro processor

SYNOPSIS
     m4 [ -Dname[=value]] [-Uname] [files ...]

DESCRIPTION
     _m_4 is a macro processor intended as a front end for any
     language (e.g., C, ratfor, fortran, lex, and yacc).  _m_4
     reads from the standard input and writes the processed text
     to the standard output.  Each of the optional argument files
     is processed in order.

     Macro calls have the form

	  name(arg1,arg2, . . . , argn)

     The `(' must immediately follow the name of the macro.  If a
     defined macro name is not followed by a `(', it is deemed to
     have no arguments.  Leading unquoted blanks, tabs, and new-
     lines are ignored while collecting arguments.  Potential
     macro names consist of alphabetic letters, digits, and
     underscore `_', where the first character is not a digit.

     Left and right single quotes (`') are used to quote strings.
     The value of a quoted string is the string stripped of the
     quotes.

     When a macro name is recognized, its arguments are collected
     by searching for a matching right parenthesis.  Macro
     evaluation proceeds normally during the collection of the
     arguments, and any commas or right parentheses which happen
     to turn up within the value of a nested call are as effec-
     tive as those in the original input text.	After argument
     collection, the value of the macro is pushed back onto the
     input stream and rescanned.

     -Dname[=value]
	       Define the symbol name to have some value (or
	       NULL).

     -Uname    Undefine the symbol name.

     _m_4 makes available the following built-in macros.	They may
     be redefined, but once this is done the original meaning is
     lost.  Their values are null unless otherwise stated.

     define    The second argument is installed as the value of
	       the macro whose name is the first argument.  Each
	       occurrence of $_n in the replacement text, where _n
	       is a digit, is replaced by the _n-th argument.
	       Argument 0 is the name of the macro; missing



Printed 11/26/99	 April 14, 1994                         1






m4(1)		    UNIX Programmer's Manual		    m4(1)



	       arguments are replaced by the null string.

     undefine  removes the definition of the macro named in its
	       argument.

     ifdef     If the first argument is defined, the value is the
	       second argument, otherwise the third.  If there is
	       no third argument, the value is null.

     changecom Change the start and end comment sequences.  The
	       default is the pound sign '#' and the newline
	       character.  With no arguments comments are turned
	       off.  The maximum legnth for a comment marker is
	       five characters.

     changequote
	       Change quote characters to the first and second
	       arguments.  _C_h_a_n_g_e_q_u_o_t_e without arguments restores
	       the original values (i.e., `').

     decr      Decrements the argument by 1.  The argument must
	       be a valid numeric string.

     divert    _m_4 maintains 10 output streams, numbered 0-9.  The
	       final output is the concatenation of the streams
	       in numerical order; initially stream 0 is the
	       current stream.	The _d_i_v_e_r_t macro changes the
	       current output stream to its (digit-string) argu-
	       ment.  Output diverted to a stream other than 0
	       through 9 is discarded.

     undivert  causes immediate output of text from diversions
	       named as arguments, or all diversions if no argu-
	       ment.  Text may be undiverted into another diver-
	       sion.  Undiverting discards the diverted text.

     defn      Returns the quoted definition for each argument.
	       This can be used to rename macro definitions (even
	       for builtin macros).

     divnum    returns the value of the current output stream.

     dnl       reads and discards characters up to and including
	       the next newline.

     expr      This is an alias for eval.

     ifelse    has three or more arguments.  If the first argu-
	       ment is the same string as the second, then the
	       value is the third argument.  If not, and if there
	       are more than four arguments, the process is
	       repeated with arguments 4, 5, 6 and 7.  Otherwise,



Printed 11/26/99	 April 14, 1994                         2






m4(1)		    UNIX Programmer's Manual		    m4(1)



	       the value is either the fourth string, or, if it
	       is not present, null.

     incr      returns the value of its argument incremented by
	       1.  The value of the argument is calculated by
	       interpreting an initial digit-string as a decimal
	       number.

     eval      evaluates its argument as an arithmetic expres-
	       sion, using 32-bit arithmetic.  Operators include
	       +, -, *, /, %, ^ (exponentiation); relationals;
	       parentheses.

     len       returns the number of characters in its argument.

     m4exit    Immediately exits with the return value specified
	       by the first argument, 0 if none.

     m4wrap    Allows you to define what happens at the final
	       EOF, usually for cleanup purposes.  (e.g.,
	       m4wrap("cleanup(tempfile)") causes the macro
	       cleanup to be invoked after all processing is
	       done.)

     index     returns the position in its first argument where
	       the second argument begins (zero origin), or -1 if
	       the second argument does not occur.

     substr    returns a substring of its first argument.  The
	       second argument is a zero origin number selecting
	       the first character; the third argument indicates
	       the length of the substring.  A missing third
	       argument is taken to be large enough to extend to
	       the end of the first string.

     translit  transliterates the characters in its first argu-
	       ment from the set given by the second argument to
	       the set given by the third.  No abbreviations are
	       permitted.

     include   returns the contents of the file named in the
	       argument.

     sinclude  is identical to _i_n_c_l_u_d_e, except that it says noth-
	       ing if the file is inaccessible.

     syscmd    executes the UNIX command given in the first argu-
	       ment.  No value is returned.

     maketemp  fills in a string of XXXXX in its argument with
	       the current process id.




Printed 11/26/99	 April 14, 1994                         3






m4(1)		    UNIX Programmer's Manual		    m4(1)



     paste     Includes the contents of the file specified by the
	       first argument without any macro processing.
	       Aborts with an error message if the file cannot be
	       included.

     popdef    Restores the pushdef'd definition for each argu-
	       ment.

     pushdef   Takes the same arguments as define, but it saves
	       the definition on a stack for later retrieval by
	       popdef.

     shift     Returns all but the first argument, the remaining
	       arguments are quoted and pushed back with commas
	       in between.  The quoting nullifies the effect of
	       the extra scan that will subsequently be per-
	       formed.

     spaste    Similar to paste, except it ignores any errors.

     syscal    Returns the return value from the last syscmd.

     errprint  prints its argument on the diagnostic output file.

     dumpdef   prints current names and definitions, for the
	       named items, or for all if no arguments are given.

     unix      A pre-defined macro for testing the OS platform.

SEE ALSO
     B. W. Kernighan and D. M. Ritchie, _T_h_e _m_4 _M_a_c_r_o _P_r_o_c_e_s_s_o_r

HISTORY
     An m4 command appeared in Version 6 AT&T UNIX.

AUTHOR
     Ozan Yigit <oz@sis.yorku.ca>


















Printed 11/26/99	 April 14, 1994                         4



