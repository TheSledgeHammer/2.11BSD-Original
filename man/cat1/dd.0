


DD(1)		    UNIX Programmer's Manual		    DD(1)



NAME
     dd - convert and copy a file

SYNOPSIS
     dd [option=value] ...

DESCRIPTION
     _D_d copies the specified input file to the specified output
     with possible conversions.  The standard input and output
     are used by default.  The input and output block size may be
     specified to take advantage of raw physical I/O.

     _o_p_t_i_o_n	    _v_a_l_u_e_s
     if=	    input file name; standard input is default
     of=	    output file name; standard output is default
     ibs=_n	    input block size _n bytes (default 512)
     obs=_n	    output block size (default 512)
     bs=_n	    set both input and output block size,
		    superseding _i_b_s and _o_b_s; also, if no conver-
		    sion is specified, it is particularly effi-
		    cient since no copy need be done
     cbs=_n	    conversion buffer size
     skip=_n	    skip _n input records before starting copy
     files=_n	    copy _n input files before terminating (makes
		    sense only where input is a magtape or simi-
		    lar device).
     seek=_n	    seek _n records from beginning of output file
		    before copying
     count=_n	    copy only _n input records
     conv=ascii     convert EBCDIC to ASCII
	  ebcdic    convert ASCII to EBCDIC
	  ibm	    slightly different map of ASCII to EBCDIC
	  block     convert variable length records to fixed
		    length
	  unblock   convert fixed length records to variable
		    length
	  lcase     map alphabetics to lower case
	  ucase     map alphabetics to upper case
	  swab	    swap every pair of bytes
	  noerror   do not stop processing on an error
	  sync	    pad every input record to _i_b_s
	  ... , ... several comma-separated conversions

     Where sizes are specified, a number of bytes is expected.	A
     number may end with k, b or w to specify multiplication by
     1024, 512, or 2 respectively; a pair of numbers may be
     separated by x to indicate a product.

     _C_b_s is used only if _a_s_c_i_i, _u_n_b_l_o_c_k, _e_b_c_d_i_c, _i_b_m, or _b_l_o_c_k
     conversion is specified.  In the first two cases, _c_b_s char-
     acters are placed into the conversion buffer, any specified
     character mapping is done, trailing blanks trimmed and new-



Printed 11/26/99	 April 29, 1985                         1






DD(1)		    UNIX Programmer's Manual		    DD(1)



     line added before sending the line to the output.	In the
     latter three cases, characters are read into the conversion
     buffer, and blanks added to make up an output record of size
     _c_b_s.

     After completion, _d_d reports the number of whole and partial
     input and output blocks.

     For example, to read an EBCDIC tape blocked ten 80-byte
     EBCDIC card images per record into the ASCII file _x:


	  dd if=/dev/rmt0 of=x ibs=800 cbs=80 conv=ascii,lcase

     Note the use of raw magtape.  _D_d is especially suited to I/O
     on the raw physical devices because it allows reading and
     writing in arbitrary record sizes.

SEE ALSO
     cp(1), tr(1)

DIAGNOSTICS
     f+p records in(out): numbers of full and partial records
     read(written)

BUGS
     The ASCII/EBCDIC conversion tables are taken from the 256
     character standard in the CACM Nov, 1968.	The `ibm' conver-
     sion, while less blessed as a standard, corresponds better
     to certain IBM print train conventions.  There is no univer-
     sal solution.
     One must specify ``conv=noerror,sync'' when copying raw
     disks with bad sectors to insure _d_d stays synchronized.

     Certain combinations of arguments to _c_o_n_v= are permitted.
     However, the _b_l_o_c_k or _u_n_b_l_o_c_k option cannot be combined with
     _a_s_c_i_i, _e_b_c_d_i_c or _i_b_m.  Invalid combinations _s_i_l_e_n_t_l_y _i_g_n_o_r_e
     all but the last mutually-exclusive keyword.

















Printed 11/26/99	 April 29, 1985                         2



