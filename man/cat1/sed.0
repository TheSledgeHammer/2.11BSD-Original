


SED(1)		    UNIX Programmer's Manual		   SED(1)



NAME
     sed - stream editor

SYNOPSIS
     sed [ -n ] [ -e script ] [ -f sfile ] [ file ] ...

DESCRIPTION
     _S_e_d copies the named _f_i_l_e_s (standard input default) to the
     standard output, edited according to a script of commands.
     The -f option causes the script to be taken from file _s_f_i_l_e;
     these options accumulate.	If there is just one -e option
     and no -f's, the flag -e may be omitted.  The -n option
     suppresses the default output.

     A script consists of editing commands, one per line, of the
     following form:

	  [address [, address] ] function [arguments]

     In normal operation _s_e_d cyclically copies a line of input
     into a _p_a_t_t_e_r_n _s_p_a_c_e (unless there is something left after a
     `D' command), applies in sequence all commands whose
     _a_d_d_r_e_s_s_e_s select that pattern space, and at the end of the
     script copies the pattern space to the standard output
     (except under -n) and deletes the pattern space.

     An _a_d_d_r_e_s_s is either a decimal number that counts input
     lines cumulatively across files, a `$' that addresses the
     last line of input, or a context address, `/regular expres-
     sion/', in the style of _e_d(1) modified thus:

	  The escape sequence `\n' matches a newline embedded in
	  the pattern space.

     A command line with no addresses selects every pattern
     space.

     A command line with one address selects each pattern space
     that matches the address.

     A command line with two addresses selects the inclusive
     range from the first pattern space that matches the first
     address through the next pattern space that matches the
     second.  (If the second address is a number less than or
     equal to the line number first selected, only one line is
     selected.) Thereafter the process is repeated, looking again
     for the first address.

     Editing commands can be applied only to non-selected pattern
     spaces by use of the negation function `!' (below).





Printed 11/26/99	 April 29, 1985                         1






SED(1)		    UNIX Programmer's Manual		   SED(1)



     In the following list of functions the maximum number of
     permissible addresses for each function is indicated in
     parentheses.

     An argument denoted _t_e_x_t consists of one or more lines, all
     but the last of which end with `\' to hide the newline.
     Backslashes in text are treated like backslashes in the
     replacement string of an `s' command, and may be used to
     protect initial blanks and tabs against the stripping that
     is done on every script line.

     An argument denoted _r_f_i_l_e or _w_f_i_l_e must terminate the com-
     mand line and must be preceded by exactly one blank.  Each
     _w_f_i_l_e is created before processing begins.  There can be at
     most 10 distinct _w_f_i_l_e arguments.

     (1)a\
     _t_e_x_t
	  Append.  Place _t_e_x_t on the output before reading the
	  next input line.

     (2)b _l_a_b_e_l
	  Branch to the `:' command bearing the _l_a_b_e_l.	If _l_a_b_e_l
	  is empty, branch to the end of the script.

     (2)c\
     _t_e_x_t
	  Change.  Delete the pattern space.  With 0 or 1 address
	  or at the end of a 2-address range, place _t_e_x_t on the
	  output.  Start the next cycle.

     (2)d Delete the pattern space.  Start the next cycle.

     (2)D Delete the initial segment of the pattern space through
	  the first newline.  Start the next cycle.

     (2)g Replace the contents of the pattern space by the con-
	  tents of the hold space.

     (2)G Append the contents of the hold space to the pattern
	  space.

     (2)h Replace the contents of the hold space by the contents
	  of the pattern space.

     (2)H Append the contents of the pattern space to the hold
	  space.

     (1)i\
     _t_e_x_t
	  Insert.  Place _t_e_x_t on the standard output.




Printed 11/26/99	 April 29, 1985                         2






SED(1)		    UNIX Programmer's Manual		   SED(1)



     (2)n Copy the pattern space to the standard output.  Replace
	  the pattern space with the next line of input.

     (2)N Append the next line of input to the pattern space with
	  an embedded newline.	(The current line number
	  changes.)

     (2)p Print.  Copy the pattern space to the standard output.

     (2)P Copy the initial segment of the pattern space through
	  the first newline to the standard output.

     (1)q Quit.  Branch to the end of the script.  Do not start a
	  new cycle.

     (2)r _r_f_i_l_e
	  Read the contents of _r_f_i_l_e.  Place them on the output
	  before reading the next input line.

     (2)s/_r_e_g_u_l_a_r _e_x_p_r_e_s_s_i_o_n/_r_e_p_l_a_c_e_m_e_n_t/_f_l_a_g_s
	  Substitute the _r_e_p_l_a_c_e_m_e_n_t string for instances of the
	  _r_e_g_u_l_a_r _e_x_p_r_e_s_s_i_o_n in the pattern space.  Any character
	  may be used instead of `/'.  For a fuller description
	  see _e_d(1).  _F_l_a_g_s is zero or more of

	  g    Global.	Substitute for all nonoverlapping
	       instances of the _r_e_g_u_l_a_r _e_x_p_r_e_s_s_i_o_n rather than
	       just the first one.

	  p    Print the pattern space if a replacement was made.

	  w _w_f_i_l_e
	       Write.  Append the pattern space to _w_f_i_l_e if a
	       replacement was made.

     (2)t _l_a_b_e_l
	  Test.  Branch to the `:' command bearing the _l_a_b_e_l if
	  any substitutions have been made since the most recent
	  reading of an input line or execution of a `t'.  If
	  _l_a_b_e_l is empty, branch to the end of the script.

     (2)w _w_f_i_l_e
	  Write.  Append the pattern space to _w_f_i_l_e.

     (2)x Exchange the contents of the pattern and hold spaces.

     (2)y/_s_t_r_i_n_g_1/_s_t_r_i_n_g_2/
	  Transform.  Replace all occurrences of characters in
	  _s_t_r_i_n_g_1 with the corresponding character in _s_t_r_i_n_g_2.
	  The lengths of _s_t_r_i_n_g_1 and _s_t_r_i_n_g_2 must be equal.

     (2)! _f_u_n_c_t_i_o_n



Printed 11/26/99	 April 29, 1985                         3






SED(1)		    UNIX Programmer's Manual		   SED(1)



	  Don't.  Apply the _f_u_n_c_t_i_o_n (or group, if _f_u_n_c_t_i_o_n is
	  `{') only to lines _n_o_t selected by the address(es).

     (0): _l_a_b_e_l
	  This command does nothing; it bears a _l_a_b_e_l for `b' and
	  `t' commands to branch to.

     (1)= Place the current line number on the standard output as
	  a line.

     (2){ Execute the following commands through a matching `}'
	  only when the pattern space is selected.

     (0)  An empty command is ignored.

SEE ALSO
     ed(1), grep(1), awk(1), lex(1)






































Printed 11/26/99	 April 29, 1985                         4



