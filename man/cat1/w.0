


W(1)		    UNIX Programmer's Manual		     W(1)



NAME
     w, uptime	- who is on and what they are doing; system time
     up

SYNOPSIS
     w [ -hswu ] [ user ]
     uptime

DESCRIPTION
     _W prints a summary of the current activity on the system,
     including what each user is doing.

     The _u_p_t_i_m_e invocation prints only the header line.

     The heading line shows the current time of day, how long the
     system has been up, the number of users logged into the sys-
     tem, and the load averages.  The load average numbers give
     the number of jobs in the run queue averaged over 1, 5 and
     15 minutes.

     The fields output are: the users login name, the name of the
     tty the user is on, the time of day the user logged on, the
     number of minutes since the user last typed anything, the
     CPU time used by all processes and their children on that
     terminal, the CPU time used by the currently active
     processes, the name and arguments of the current process.

     The -h flag suppresses the heading.  The -s flag asks for a
     short form of output.  In the short form, the tty is abbre-
     viated, the login time and cpu times are left off, as are
     the arguments to commands.

     The -w and -u flags force the _w and _u_p_t_i_m_e actions respec-
     tively, regardless of the name the program is invoked as.

     If a _u_s_e_r name is included, the output will be restricted to
     that user.

FILES
     /var/run/utmp	 for login names
     /dev/swap		 secondary storage

SEE ALSO
     finger(1), ps(1), who(1)

AUTHOR
     Mark Horton

BUGS
     The notion of the ``current process'' is muddy.  The current
     algorithm is ``the highest numbered process on the terminal
     that is not ignoring interrupts, or, if there is none, the



Printed 11/26/99						1






W(1)		    UNIX Programmer's Manual		     W(1)



     highest numbered process on the terminal''.  This fails, for
     example, in critical sections of programs like the shell and
     editor, or when faulty programs running in the background
     fork and fail to ignore interrupts.  (In cases where no pro-
     cess can be found, _w prints ``-''.)

     The CPU time is only an estimate, in particular, if someone
     leaves a background processs running after logging out, the
     person currently on that terminal is ``charged'' with the
     time.

     Background processes are not shown, even though they account
     for much of the load on the system.

     Sometimes processes, typically those in the background, are
     printed with null or garbaged arguments.  In these cases,
     the name of the command is printed in parentheses.






































Printed 11/26/99						2



